<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structmath_1_1mat2" kind="struct" language="C++" prot="public">
    <compoundname>math::mat2</compoundname>
    <includes refid="matrix2_8h" local="no">matrix2.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmath_1_1mat2_1a89819bfffc570afb89d104ca362eee47" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float math::mat2::n[2][2]</definition>
        <argsstring>[2][2]</argsstring>
        <name>n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="14" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmath_1_1mat2_1a2e0ab76709b677b4376d7899b5b28b37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>math::mat2::mat2</definition>
        <argsstring>()</argsstring>
        <name>mat2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="16" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a1ab77b33fecae29dc7167893616ac976" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>math::mat2::mat2</definition>
        <argsstring>(float _11, float _12, float _21, float _22)</argsstring>
        <name>mat2</name>
        <param>
          <type>float</type>
          <declname>_11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_22</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="18" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a27d9de18d87c6e3c9c6554e28ceb1609" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>math::mat2::mat2</definition>
        <argsstring>(const vec2 &amp;a, const vec2 &amp;b)</argsstring>
        <name>mat2</name>
        <param>
          <type>const <ref refid="structmath_1_1vec2" kindref="compound">vec2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structmath_1_1vec2" kindref="compound">vec2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="23" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a59d375076b3309ce5d0054c60a6f1530" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; math::mat2::operator()</definition>
        <argsstring>(int i, int j)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets element value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>row number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>column number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix element </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="33" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1af7ba9cf2139642b4cdc7b9332797992b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; math::mat2::operator()</definition>
        <argsstring>(int i, int j) const</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets element value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>row number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>column number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix element </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="44" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a551cb5e3066d2012a9efa3f78f261f4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1vec2" kindref="compound">vec2</ref> &amp;</type>
        <definition>vec2&amp; math::mat2::operator[]</definition>
        <argsstring>(int j)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets row as vector <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>row number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>row in <ref refid="structmath_1_1vec2" kindref="compound">vec2</ref> representation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="54" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1ac3a7c6540e29afae00ed93c5c103d3a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structmath_1_1vec2" kindref="compound">vec2</ref> &amp;</type>
        <definition>const vec2&amp; math::mat2::operator[]</definition>
        <argsstring>(int j) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets row as vector <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>row number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>row in <ref refid="structmath_1_1vec2" kindref="compound">vec2</ref> representation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="64" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a5971423e3b33e451df76e4a2a4e47e36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1mat2" kindref="compound">mat2</ref></type>
        <definition>mat2 math::mat2::operator*</definition>
        <argsstring>(float scalar) const</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplication by scalar <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="74" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a57bfc3f0f7fdaf172fc6a4fab4b16bf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1mat2" kindref="compound">mat2</ref></type>
        <definition>mat2 math::mat2::operator*</definition>
        <argsstring>(const mat2 &amp;other) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structmath_1_1mat2" kindref="compound">mat2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplication by other matrix2 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>some matrix2 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated matrix</para></simplesect>
<ulink url="https://en.wikipedia.org/wiki/Matrix_multiplication">https://en.wikipedia.org/wiki/Matrix_multiplication</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="90" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="90" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a59ef3a67aed221a0bb05c27accc83fec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1mat2" kindref="compound">mat2</ref></type>
        <definition>mat2 math::mat2::operator+</definition>
        <argsstring>(const mat2 &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structmath_1_1mat2" kindref="compound">mat2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Addition by other matrix2 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>some matrix2 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="105" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="105" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1ab9b8cc4b90979edce51e50228c9b3225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1mat2" kindref="compound">mat2</ref> &amp;</type>
        <definition>mat2&amp; math::mat2::operator*=</definition>
        <argsstring>(float scalar)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplication by scalar <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="120" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a908aae05345831bc50a889605c15bd81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1mat2" kindref="compound">mat2</ref> &amp;</type>
        <definition>mat2&amp; math::mat2::operator*=</definition>
        <argsstring>(const mat2 &amp;other)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="structmath_1_1mat2" kindref="compound">mat2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplication by other matrix2 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>some matrix2 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated matrix</para></simplesect>
<ulink url="https://en.wikipedia.org/wiki/Matrix_multiplication">https://en.wikipedia.org/wiki/Matrix_multiplication</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="132" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a7266a3b96614a92227581b6ff656021f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1mat2" kindref="compound">mat2</ref> &amp;</type>
        <definition>mat2&amp; math::mat2::operator+=</definition>
        <argsstring>(const mat2 &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structmath_1_1mat2" kindref="compound">mat2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Addition by other matrix2 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>some matrix2 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="143" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="143" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a86e3e0f8ba4337a1ff13069df2ce77b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool math::mat2::operator==</definition>
        <argsstring>(const mat2 &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structmath_1_1mat2" kindref="compound">mat2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare current matrix with other <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>some matrix2 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all elements are equal </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="154" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="154" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1aef4aa6b1daded9861c6efd4f5e6366b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool math::mat2::operator!=</definition>
        <argsstring>(const mat2 &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structmath_1_1mat2" kindref="compound">mat2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare current matrix with another <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>some matrix2 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if one at least one element differ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="167" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1ad005191511a9be3a91dca76960607394" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1mat2" kindref="compound">mat2</ref></type>
        <definition>mat2 math::mat2::transpose</definition>
        <argsstring>() const</argsstring>
        <name>transpose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transoses matrix <simplesect kind="return"><para>transposed matrix  <ulink url="https://en.wikipedia.org/wiki/Transpose">https://en.wikipedia.org/wiki/Transpose</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="191" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="191" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1ac4f7c1b4967c8f9c9857eb346ff8c0e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float math::mat2::determinant</definition>
        <argsstring>() const</argsstring>
        <name>determinant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates matrix determinant <simplesect kind="return"><para>matrix determinant</para></simplesect>
<ulink url="https://en.wikipedia.org/wiki/Determinant">https://en.wikipedia.org/wiki/Determinant</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="206" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="206" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a960118b3ee04534dd99d5577496193f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1mat2" kindref="compound">mat2</ref></type>
        <definition>mat2 math::mat2::minor</definition>
        <argsstring>() const</argsstring>
        <name>minor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates matrix minor <simplesect kind="return"><para>minor matrix</para></simplesect>
<ulink url="https://en.wikipedia.org/wiki/Minor_(linear_algebra)">https://en.wikipedia.org/wiki/Minor_(linear_algebra)</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="217" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="217" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1ac3be1c005e806fc3a517c09c37be44ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1mat2" kindref="compound">mat2</ref></type>
        <definition>mat2 math::mat2::cofactor</definition>
        <argsstring>() const</argsstring>
        <name>cofactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates matrix cofactor <simplesect kind="return"><para>calculation result</para></simplesect>
<ulink url="https://en.wikipedia.org/wiki/Minor_(linear_algebra)#Cofactor_expansion_of_the_determinant">https://en.wikipedia.org/wiki/Minor_(linear_algebra)#Cofactor_expansion_of_the_determinant</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="228" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="228" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1a3690044fe3bbd155a1298a6b3f047705" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1mat2" kindref="compound">mat2</ref></type>
        <definition>mat2 math::mat2::adjugate</definition>
        <argsstring>() const</argsstring>
        <name>adjugate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adjugates current matrix <simplesect kind="return"><para>calculation result</para></simplesect>
<ulink url="https://en.wikipedia.org/wiki/Adjugate_matrix">https://en.wikipedia.org/wiki/Adjugate_matrix</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="244" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="244" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1mat2_1aa3e143e6c1338df92888a623b2ace226" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmath_1_1mat2" kindref="compound">mat2</ref></type>
        <definition>mat2 math::mat2::inverse</definition>
        <argsstring>()</argsstring>
        <name>inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inverses current matrix <simplesect kind="return"><para>inversed matrix</para></simplesect>
<ulink url="https://en.wikipedia.org/wiki/Invertible_matrix">https://en.wikipedia.org/wiki/Invertible_matrix</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="255" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="255" bodyend="261"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structmath_1_1mat2_1a651162fc04bdf7d98bdf9b7586443e5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;ostream, const mat2 &amp;mat)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>ostream</declname>
        </param>
        <param>
          <type>const <ref refid="structmath_1_1mat2" kindref="compound">mat2</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stream insertion <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ostream</parametername>
</parameternamelist>
<parameterdescription>
<para>output stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix that will be putted to stream </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>will be removed </para></simplesect>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="179" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="179" bodyend="184"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Two dimensional square matrix. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" line="13" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/matrix2.h" bodystart="13" bodyend="262"/>
    <listofallmembers>
      <member refid="structmath_1_1mat2_1a3690044fe3bbd155a1298a6b3f047705" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>adjugate</name></member>
      <member refid="structmath_1_1mat2_1ac3be1c005e806fc3a517c09c37be44ba" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>cofactor</name></member>
      <member refid="structmath_1_1mat2_1ac4f7c1b4967c8f9c9857eb346ff8c0e3" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>determinant</name></member>
      <member refid="structmath_1_1mat2_1aa3e143e6c1338df92888a623b2ace226" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>inverse</name></member>
      <member refid="structmath_1_1mat2_1a2e0ab76709b677b4376d7899b5b28b37" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>mat2</name></member>
      <member refid="structmath_1_1mat2_1a1ab77b33fecae29dc7167893616ac976" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>mat2</name></member>
      <member refid="structmath_1_1mat2_1a27d9de18d87c6e3c9c6554e28ceb1609" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>mat2</name></member>
      <member refid="structmath_1_1mat2_1a960118b3ee04534dd99d5577496193f4" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>minor</name></member>
      <member refid="structmath_1_1mat2_1a89819bfffc570afb89d104ca362eee47" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>n</name></member>
      <member refid="structmath_1_1mat2_1aef4aa6b1daded9861c6efd4f5e6366b8" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator!=</name></member>
      <member refid="structmath_1_1mat2_1a59d375076b3309ce5d0054c60a6f1530" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator()</name></member>
      <member refid="structmath_1_1mat2_1af7ba9cf2139642b4cdc7b9332797992b" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator()</name></member>
      <member refid="structmath_1_1mat2_1a5971423e3b33e451df76e4a2a4e47e36" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator*</name></member>
      <member refid="structmath_1_1mat2_1a57bfc3f0f7fdaf172fc6a4fab4b16bf2" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator*</name></member>
      <member refid="structmath_1_1mat2_1ab9b8cc4b90979edce51e50228c9b3225" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator*=</name></member>
      <member refid="structmath_1_1mat2_1a908aae05345831bc50a889605c15bd81" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator*=</name></member>
      <member refid="structmath_1_1mat2_1a59ef3a67aed221a0bb05c27accc83fec" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator+</name></member>
      <member refid="structmath_1_1mat2_1a7266a3b96614a92227581b6ff656021f" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator+=</name></member>
      <member refid="structmath_1_1mat2_1a651162fc04bdf7d98bdf9b7586443e5c" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator&lt;&lt;</name></member>
      <member refid="structmath_1_1mat2_1a86e3e0f8ba4337a1ff13069df2ce77b4" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator==</name></member>
      <member refid="structmath_1_1mat2_1a551cb5e3066d2012a9efa3f78f261f4e" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator[]</name></member>
      <member refid="structmath_1_1mat2_1ac3a7c6540e29afae00ed93c5c103d3a4" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>operator[]</name></member>
      <member refid="structmath_1_1mat2_1ad005191511a9be3a91dca76960607394" prot="public" virt="non-virtual"><scope>math::mat2</scope><name>transpose</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
