<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="resourceHolder_8cpp" kind="file" language="C++">
    <compoundname>resourceHolder.cpp</compoundname>
    <includes refid="resourceHolder_8h" local="yes">resourceHolder.h</includes>
    <includes local="yes">../../deps/stb/stb_image.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="log2_8h" local="yes">core/log2.h</includes>
    <incdepgraph>
      <node id="529">
        <label>sprite_sheet_inst.h</label>
        <link refid="sprite__sheet__inst_8h_source"/>
        <childnode refid="530" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="537" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
        <childnode refid="540" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="541" relation="include">
        </childnode>
      </node>
      <node id="531">
        <label>log2.h</label>
        <link refid="log2_8h_source"/>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="534" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
        <childnode refid="536" relation="include">
        </childnode>
      </node>
      <node id="542">
        <label>../../deps/stb/stb_image.h</label>
      </node>
      <node id="528">
        <label>core/tiled_map.h</label>
        <link refid="tiled__map_8h_source"/>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="541" relation="include">
        </childnode>
      </node>
      <node id="516">
        <label>math/matrix4.h</label>
        <link refid="matrix4_8h_source"/>
        <childnode refid="517" relation="include">
        </childnode>
      </node>
      <node id="520">
        <label>cmath</label>
      </node>
      <node id="508">
        <label>resourceHolder.h</label>
        <link refid="resourceHolder_8h_source"/>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
      </node>
      <node id="532">
        <label>cstdarg</label>
      </node>
      <node id="512">
        <label>string</label>
      </node>
      <node id="524">
        <label>map</label>
      </node>
      <node id="519">
        <label>cfloat</label>
      </node>
      <node id="509">
        <label>fstream</label>
      </node>
      <node id="517">
        <label>vector4.h</label>
        <link refid="vector4_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
      </node>
      <node id="521">
        <label>ostream</label>
      </node>
      <node id="530">
        <label>debug_utils.h</label>
        <link refid="debug__utils_8h_source"/>
        <childnode refid="531" relation="include">
        </childnode>
      </node>
      <node id="515">
        <label>core/shader.h</label>
        <link refid="shader_8h_source"/>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
      </node>
      <node id="526">
        <label>core/texture_atlas.h</label>
        <link refid="texture__atlas_8h_source"/>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
      </node>
      <node id="518">
        <label>utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
      </node>
      <node id="513">
        <label>string_view</label>
      </node>
      <node id="540">
        <label>sc2dTypes.h</label>
        <link refid="sc2dTypes_8h_source"/>
        <childnode refid="523" relation="include">
        </childnode>
      </node>
      <node id="533">
        <label>cstdio</label>
      </node>
      <node id="535">
        <label>ctime</label>
      </node>
      <node id="541">
        <label>vector</label>
      </node>
      <node id="522">
        <label>math/vector3.h</label>
        <link refid="vector3_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
      </node>
      <node id="511">
        <label>sstream</label>
      </node>
      <node id="538">
        <label>matrix2.h</label>
        <link refid="matrix2_8h_source"/>
        <childnode refid="523" relation="include">
        </childnode>
      </node>
      <node id="534">
        <label>cstdlib</label>
      </node>
      <node id="525">
        <label>core/texture.h</label>
        <link refid="texture_8h_source"/>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
      </node>
      <node id="514">
        <label>unordered_map</label>
      </node>
      <node id="510">
        <label>glad/glad.h</label>
      </node>
      <node id="536">
        <label>mutex</label>
      </node>
      <node id="507">
        <label>/home/novasurfer/projects/scarecrow2d/src/filesystem/resourceHolder.cpp</label>
        <link refid="resourceHolder_8cpp"/>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="542" relation="include">
        </childnode>
        <childnode refid="543" relation="include">
        </childnode>
        <childnode refid="531" relation="include">
        </childnode>
      </node>
      <node id="537">
        <label>math/transform.h</label>
        <link refid="transform_8h_source"/>
        <childnode refid="538" relation="include">
        </childnode>
        <childnode refid="539" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
      </node>
      <node id="523">
        <label>math/vector2.h</label>
        <link refid="vector2_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
      </node>
      <node id="543">
        <label>stdio.h</label>
      </node>
      <node id="539">
        <label>matrix3.h</label>
        <link refid="matrix3_8h_source"/>
        <childnode refid="522" relation="include">
        </childnode>
      </node>
      <node id="527">
        <label>math/size2d.h</label>
        <link refid="size2d_8h_source"/>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacesc2d">sc2d</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Maksim<sp/>Ruts<sp/>on<sp/>29-Aug-18.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resourceHolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../deps/stb/stb_image.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core/log2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesc2d" kindref="compound">sc2d</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>Shader&gt;<sp/>ResourceHolder::shaders;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>Texture2d&gt;<sp/>ResourceHolder::textures;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>tiled::Map&gt;<sp/>ResourceHolder::tilemaps;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>TextureAtlas&gt;<sp/>ResourceHolder::texture_atlases;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResourceHolder::load_shader_program(ShaderSource<sp/>shader_source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/>vert_file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/>frag_file,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/>geom_file)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shader<sp/>shader<sp/>{};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(shader_source<sp/>==<sp/>ShaderSource::FILE)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>v_shader,<sp/>f_shader,<sp/>g_shader;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_shader<sp/>=<sp/>load_shader(vert_file);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_shader<sp/>=<sp/>load_shader(frag_file);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(geom_file<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_shader<sp/>=<sp/>load_shader(geom_file);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader.compile(v_shader.c_str(),<sp/>f_shader.c_str(),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geom_file<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>?<sp/>g_shader.c_str()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader.compile(vert_file,<sp/>frag_file,<sp/>geom_file<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>?<sp/>geom_file<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shaders.insert({name,<sp/>shader});</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Shader&amp;<sp/>ResourceHolder::get_shader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>shader_name)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shaders[shader_name];</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResourceHolder::load_texture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>img_file,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alpha,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height,<sp/>nr_channels;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>image<sp/>=</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi_load(img_file.c_str(),<sp/>&amp;width,<sp/>&amp;height,<sp/>&amp;nr_channels,<sp/>STBI_rgb_alpha);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textures[name]<sp/>=<sp/>Texture2d(image,<sp/>width,<sp/>height,<sp/>alpha<sp/>?<sp/>GL_RGBA<sp/>:<sp/>GL_RGB);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Texture2d&amp;<sp/>ResourceHolder::get_texture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>texture_name)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>textures[texture_name];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResourceHolder::clean()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>:<sp/>shaders)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteProgram(s.second.get_program());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>textures)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteTextures(1,<sp/>&amp;t.second.get_obj_id());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>remove<sp/>C++<sp/>streams<sp/>and<sp/>exceptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ResourceHolder::load_shader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/>file_path)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>shader_file(file_path);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>shader_stream;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader_stream<sp/>&lt;&lt;<sp/>shader_file.rdbuf();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader_file.close();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shader_stream.str();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catch(const<sp/>std::exception&amp;<sp/>e)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_err_file(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>shader<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>file_path);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResourceHolder::load_tiled_map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiled::Data&amp;<sp/>tiled_data)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tiled::Map<sp/>tiled_map<sp/>{tiled_data};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tilemaps[name]<sp/>=<sp/>tiled_map;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tiled::Map&amp;<sp/>ResourceHolder::get_tiled_map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>map_name)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tilemaps[map_name];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResourceHolder::load_texture_atlas(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>img_file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>rows,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>columns,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height,<sp/>nr_channels;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>image<sp/>=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stbi_load(img_file.c_str(),<sp/>&amp;width,<sp/>&amp;height,<sp/>&amp;nr_channels,<sp/>STBI_rgb_alpha);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture_atlases[name]<sp/>=</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextureAtlas(image,<sp/>width,<sp/>height,<sp/>rows,<sp/>columns,<sp/>alpha<sp/>?<sp/>GL_RGBA<sp/>:<sp/>GL_RGB);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TextureAtlas&amp;<sp/>ResourceHolder::get_texture_atlas(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>texture_atlases[name];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/novasurfer/projects/scarecrow2d/src/filesystem/resourceHolder.cpp"/>
  </compounddef>
</doxygen>
