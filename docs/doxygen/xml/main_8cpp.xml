<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes refid="debug__utils_8h" local="yes">core/debug_utils.h</includes>
    <includes refid="log2_8h" local="yes">core/log2.h</includes>
    <includes refid="result_8h" local="yes">core/result.h</includes>
    <includes refid="sprite_8h" local="yes">core/sprite.h</includes>
    <includes refid="tiled__map_8h" local="yes">core/tiled_map.h</includes>
    <includes refid="window_8h" local="yes">core/window.h</includes>
    <includes refid="configLoader_8h" local="yes">filesystem/configLoader.h</includes>
    <includes refid="resourceHolder_8h" local="yes">filesystem/resourceHolder.h</includes>
    <includes refid="transform_8h" local="yes">math/transform.h</includes>
    <includes local="no">GLFW/glfw3.h</includes>
    <includes local="no">glad/glad.h</includes>
    <incdepgraph>
      <node id="614">
        <label>sprite_sheet_inst.h</label>
        <link refid="sprite__sheet__inst_8h_source"/>
        <childnode refid="587" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
        <childnode refid="618" relation="include">
        </childnode>
      </node>
      <node id="588">
        <label>log2.h</label>
        <link refid="log2_8h_source"/>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="591" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
      </node>
      <node id="613">
        <label>core/tiled_map.h</label>
        <link refid="tiled__map_8h_source"/>
        <childnode refid="607" relation="include">
        </childnode>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="618" relation="include">
        </childnode>
      </node>
      <node id="595">
        <label>os/error_types.h</label>
        <link refid="error__types_8h_source"/>
      </node>
      <node id="586">
        <label>/home/novasurfer/projects/scarecrow2d/src/main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="587" relation="include">
        </childnode>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="613" relation="include">
        </childnode>
        <childnode refid="621" relation="include">
        </childnode>
        <childnode refid="624" relation="include">
        </childnode>
        <childnode refid="627" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="622" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
      </node>
      <node id="608">
        <label>math/matrix4.h</label>
        <link refid="matrix4_8h_source"/>
        <childnode refid="609" relation="include">
        </childnode>
      </node>
      <node id="603">
        <label>cmath</label>
      </node>
      <node id="594">
        <label>core/result.h</label>
        <link refid="result_8h_source"/>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
      </node>
      <node id="627">
        <label>filesystem/resourceHolder.h</label>
        <link refid="resourceHolder_8h_source"/>
        <childnode refid="626" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="628" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="629" relation="include">
        </childnode>
        <childnode refid="630" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
        <childnode refid="631" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="613" relation="include">
        </childnode>
      </node>
      <node id="620">
        <label>string</label>
      </node>
      <node id="589">
        <label>cstdarg</label>
      </node>
      <node id="612">
        <label>map</label>
      </node>
      <node id="622">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="602">
        <label>cfloat</label>
      </node>
      <node id="626">
        <label>fstream</label>
      </node>
      <node id="609">
        <label>vector4.h</label>
        <link refid="vector4_8h_source"/>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
      </node>
      <node id="605">
        <label>ostream</label>
      </node>
      <node id="587">
        <label>core/debug_utils.h</label>
        <link refid="debug__utils_8h_source"/>
        <childnode refid="588" relation="include">
        </childnode>
      </node>
      <node id="625">
        <label>../../deps/nlohmann/json.hpp</label>
      </node>
      <node id="607">
        <label>shader.h</label>
        <link refid="shader_8h_source"/>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="612" relation="include">
        </childnode>
      </node>
      <node id="619">
        <label>texture_atlas.h</label>
        <link refid="texture__atlas_8h_source"/>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
      </node>
      <node id="601">
        <label>utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
      </node>
      <node id="629">
        <label>string_view</label>
      </node>
      <node id="606">
        <label>sc2dTypes.h</label>
        <link refid="sc2dTypes_8h_source"/>
        <childnode refid="604" relation="include">
        </childnode>
      </node>
      <node id="590">
        <label>cstdio</label>
      </node>
      <node id="592">
        <label>ctime</label>
      </node>
      <node id="618">
        <label>vector</label>
      </node>
      <node id="610">
        <label>math/vector3.h</label>
        <link refid="vector3_8h_source"/>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
      </node>
      <node id="596">
        <label>os/terminate.h</label>
        <link refid="terminate_8h_source"/>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="595" relation="include">
        </childnode>
      </node>
      <node id="628">
        <label>sstream</label>
      </node>
      <node id="624">
        <label>filesystem/configLoader.h</label>
        <link refid="configLoader_8h_source"/>
        <childnode refid="625" relation="include">
        </childnode>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="626" relation="include">
        </childnode>
      </node>
      <node id="616">
        <label>matrix2.h</label>
        <link refid="matrix2_8h_source"/>
        <childnode refid="604" relation="include">
        </childnode>
      </node>
      <node id="591">
        <label>cstdlib</label>
      </node>
      <node id="631">
        <label>core/texture.h</label>
        <link refid="texture_8h_source"/>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
      </node>
      <node id="630">
        <label>unordered_map</label>
      </node>
      <node id="611">
        <label>glad/glad.h</label>
      </node>
      <node id="593">
        <label>mutex</label>
      </node>
      <node id="615">
        <label>math/transform.h</label>
        <link refid="transform_8h_source"/>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="609" relation="include">
        </childnode>
      </node>
      <node id="604">
        <label>vector2.h</label>
        <link refid="vector2_8h_source"/>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
      </node>
      <node id="598">
        <label>type_traits</label>
      </node>
      <node id="621">
        <label>core/window.h</label>
        <link refid="window_8h_source"/>
        <childnode refid="622" relation="include">
        </childnode>
        <childnode refid="623" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
      </node>
      <node id="597">
        <label>stacktrace.h</label>
        <link refid="stacktrace_8h_source"/>
      </node>
      <node id="599">
        <label>core/sprite.h</label>
        <link refid="sprite_8h_source"/>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
      </node>
      <node id="617">
        <label>matrix3.h</label>
        <link refid="matrix3_8h_source"/>
        <childnode refid="610" relation="include">
        </childnode>
      </node>
      <node id="623">
        <label>memory</label>
      </node>
      <node id="600">
        <label>math/size2d.h</label>
        <link refid="size2d_8h_source"/>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8cpp_1a84f7ac2c5b4819ae7e4f380a6d6b9fad" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classsc2d_1_1Window" kindref="compound">sc2d::Window</ref> &gt;</type>
        <definition>std::unique_ptr&lt;sc2d::Window&gt; window</definition>
        <argsstring></argsstring>
        <name>window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp" line="18" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/main.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1adec52e1373dc2287e79a28f3b61e7aee" prot="public" static="no" mutable="no">
        <type><ref refid="classsc2d_1_1tiled_1_1Map" kindref="compound">sc2d::tiled::Map</ref></type>
        <definition>sc2d::tiled::Map tiled_map</definition>
        <argsstring></argsstring>
        <name>tiled_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp" line="22" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/main.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a6d0b64e3a5351d6605e55f3a77f0ea50" prot="public" static="no" mutable="no">
        <type><ref refid="classsc2d_1_1TextureAtlas" kindref="compound">sc2d::TextureAtlas</ref></type>
        <definition>sc2d::TextureAtlas tex_atlas</definition>
        <argsstring></argsstring>
        <name>tex_atlas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp" line="23" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/main.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1aa48aaf412b9e33386433680c25b3883c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void key_callback</definition>
        <argsstring>(GLFWwindow *window, int key, int scancode, int action, int mode)</argsstring>
        <name>key_callback</name>
        <param>
          <type>GLFWwindow *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scancode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp" line="25" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/main.cpp" bodystart="148" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a5180f7bf2b71421af837035824a8c8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void framebuffer_size_callback</definition>
        <argsstring>(GLFWwindow *window, int width, int height)</argsstring>
        <name>framebuffer_size_callback</name>
        <param>
          <type>GLFWwindow *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp" line="26" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/main.cpp" bodystart="158" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a3fb6c92482f9fa7e3c9ac8c7e0b23034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsc2d_1_1Result" kindref="compound">sc2d::ResultBool</ref></type>
        <definition>sc2d::ResultBool engine_init</definition>
        <argsstring>()</argsstring>
        <name>engine_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp" line="28" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/main.cpp" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a7edf5c922e9b1780fe8a71a780d1dc6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsc2d_1_1Result" kindref="compound">sc2d::ResultBool</ref></type>
        <definition>sc2d::ResultBool program_init</definition>
        <argsstring>()</argsstring>
        <name>program_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp" line="39" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/main.cpp" bodystart="39" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a41db0fcfd9b3911f8bddd924bcf9233d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void poll_events</definition>
        <argsstring>()</argsstring>
        <name>poll_events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp" line="96" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/main.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a56c5cf8a568cff737ff95520cbe6b405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw</definition>
        <argsstring>()</argsstring>
        <name>draw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp" line="101" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/main.cpp" bodystart="101" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ad7fd6e3a217c528602a8e714d982fa75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update</definition>
        <argsstring>(double dt)</argsstring>
        <name>update</name>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp" line="113" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/main.cpp" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp" line="115" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/main.cpp" bodystart="115" bodyend="146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Maksim<sp/>Ruts<sp/>on<sp/>28-Aug-18.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core/debug_utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core/log2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core/result.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core/sprite.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;core/sprite_sheet_inst.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core/tiled_map.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core/window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;filesystem/configLoader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;filesystem/resourceHolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/transform.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GLFW/glfw3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glad/glad.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">std::unique_ptr&lt;sc2d::Window&gt;<sp/>window;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//std::unique_ptr&lt;sc2d::Sprite&gt;<sp/>sprite;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//std::unique_ptr&lt;sc2d::SpriteSheetInstanced&gt;<sp/>spritesheet;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="classsc2d_1_1tiled_1_1Map" kindref="compound">sc2d::tiled::Map</ref><sp/>tiled_map;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="classsc2d_1_1TextureAtlas" kindref="compound">sc2d::TextureAtlas</ref><sp/>tex_atlas;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>key_callback(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scancode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>framebuffer_size_callback(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="classsc2d_1_1Result" kindref="compound">sc2d::ResultBool</ref><sp/>engine_init()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="structsc2d_1_1Config" kindref="compound">sc2d::Config&lt;sc2d::ResourcesConfigLoad&gt;::open</ref>(</highlight><highlight class="stringliteral">&quot;resources.json&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc2d::ResultBool::throw_err(sc2d::Err::RESOURCE_LOADING_FAIL);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="structsc2d_1_1Config" kindref="compound">sc2d::Config&lt;sc2d::SceneConfigLoad&gt;::open</ref>(</highlight><highlight class="stringliteral">&quot;data/scenes/zone.json&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc2d::ResultBool::throw_err(sc2d::Err::SCENE_LOADING_FAIL);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="classsc2d_1_1Result" kindref="compound">sc2d::ResultBool</ref><sp/>program_init()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwInit();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsc2d_1_1WindowData" kindref="compound">sc2d::WindowData</ref><sp/>window_data<sp/>{3,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFW_OPENGL_CORE_PROFILE,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>800,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>600,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;scarecrow2d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framebuffer_size_callback,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_callback};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>window<sp/>=<sp/>std::make_unique&lt;sc2d::Window&gt;(window_data,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Glad<sp/>loads<sp/>OpenGL<sp/>functions<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc2d::ResultBool::throw_err(sc2d::Err::FAILED_TO_INIT_GLAD);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loading<sp/>engine<sp/>systems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>engine_init();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>glViewport(0,<sp/>0,<sp/>window_data.screen_width,<sp/>window_data.screen_height);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>glBlendFunc(GL_SRC_ALPHA,<sp/>GL_ONE_MINUS_SRC_ALPHA);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnable(GL_CULL_FACE);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>glFrontFace(GL_CCW);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnable(GL_BLEND);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>glDisable(GL_DEPTH_TEST);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>glDisable(GL_SCISSOR_TEST);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmath_1_1mat4" kindref="compound">math::mat4</ref><sp/>proj<sp/>=</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>math::ortho(0.0f,<sp/>static_cast&lt;GLfloat&gt;(window_data.screen_width),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;GLfloat&gt;(window_data.screen_height),<sp/>0.0f,<sp/>-1.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc2d::ResourceHolder::get_shader(&quot;sprite-default&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.set_int(&quot;image&quot;,<sp/>sc2d::ResourceHolder::get_texture(&quot;engineer&quot;).get_obj_id());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc2d::ResourceHolder::get_shader(&quot;sprite-default&quot;).run().set_mat4(&quot;projection&quot;,<sp/>proj);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_err_cmd(&quot;0x%x&quot;,<sp/>glGetError());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprite<sp/>=<sp/>std::make_unique&lt;sc2d::Sprite&gt;(sc2d::ResourceHolder::get_shader(&quot;sprite-default&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>log_err_cmd(&quot;0x%x&quot;,<sp/>glGetError());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsc2d_1_1Shader" kindref="compound">sc2d::Shader</ref>&amp;<sp/>sprite_sheet_shader<sp/>=<sp/>sc2d::ResourceHolder::get_shader(</highlight><highlight class="stringliteral">&quot;spritesheet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>tex_atlas<sp/>=<sp/>sc2d::ResourceHolder::get_texture_atlas(</highlight><highlight class="stringliteral">&quot;tilemap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>sprite_sheet_shader.run();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>sprite_sheet_shader.set_int(</highlight><highlight class="stringliteral">&quot;image_array&quot;</highlight><highlight class="normal">,<sp/>tex_atlas.get_obj_id());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>log_gl_error_cmd()</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>sprite_sheet_shader.set_mat4(&quot;projection&quot;,<sp/>proj);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>tiled_map<sp/>=<sp/><ref refid="namespacesc2d" kindref="compound">sc2d</ref>::ResourceHolder::get_tiled_map(&quot;wasd&quot;);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>tiled_map.init(sprite_sheet_shader);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>log_gl_error_cmd()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>spritesheet<sp/>=<sp/>std::make_unique&lt;sc2d::SpriteSheetInstanced&gt;(sprite_sheet_shader);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>!glGetError()</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(true)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespacesc2d" kindref="compound">sc2d</ref>::ResultBool::throw_err(<ref refid="namespacesc2d" kindref="compound">sc2d</ref>::Err::ENGINE_INIT_FAIL);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>poll_events()</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwPollEvents();</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw()</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>glClearColor(0.0f,<sp/>0.3f,<sp/>0.3f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprite-&gt;draw(sc2d::ResourceHolder::get_texture(&quot;logo&quot;),<sp/>math::vec2(0,<sp/>0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>math::size2d(111,<sp/>148),<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>spritesheet-&gt;draw(sc2d::ResourceHolder::get_texture_atlas(&quot;tilemap&quot;),<sp/>math::vec2(0,<sp/>0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>math::size2d(16,<sp/>16),<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>tiled_map.draw_map(tex_atlas.get_obj_id());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwSwapBuffers(window-&gt;get_window());</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt)<sp/>{}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>program_init();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Make<sp/>class<sp/>for<sp/>time<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>begin_ticks<sp/>=<sp/>glfwGetTime();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>end_ticks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta_time<sp/>=<sp/>1.0<sp/>/<sp/>60.0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Game<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!glfwWindowShouldClose(window-&gt;get_window()))<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update(delta_time);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poll_events();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_ticks<sp/>=<sp/>glfwGetTime();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_time<sp/>=<sp/>(begin_ticks<sp/>-<sp/>end_ticks)<sp/>/<sp/>glfwGetTime();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>delta_time<sp/>is<sp/>too<sp/>large,<sp/>we<sp/>must<sp/>have<sp/>resumed<sp/>from<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>breakpoint<sp/>--<sp/>frame-lock<sp/>to<sp/>the<sp/>target<sp/>rate<sp/>this<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(delta_time<sp/>&gt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_time<sp/>=<sp/>1.0<sp/>/<sp/>60.0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_ticks<sp/>=<sp/>end_ticks;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwTerminate();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>key_callback(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scancode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>a<sp/>user<sp/>presses<sp/>the<sp/>escape<sp/>key,<sp/>we<sp/>set<sp/>the<sp/>WindowShouldClose<sp/>property<sp/>to<sp/>true,<sp/>closing<sp/>the<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key<sp/>==<sp/>GLFW_KEY_ESCAPE<sp/>&amp;&amp;<sp/>action<sp/>==<sp/>GLFW_PRESS)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glfwSetWindowShouldClose(window,<sp/>GL_TRUE);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>glfw:<sp/>whenever<sp/>the<sp/>window<sp/>size<sp/>changed<sp/>(by<sp/>OS<sp/>or<sp/>user<sp/>resize)<sp/>this<sp/>callback<sp/>function<sp/>executes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>framebuffer_size_callback(GLFWwindow*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>the<sp/>viewport<sp/>matches<sp/>the<sp/>new<sp/>window<sp/>dimensions;<sp/>note<sp/>that<sp/>width<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>height<sp/>will<sp/>be<sp/>significantly<sp/>larger<sp/>than<sp/>specified<sp/>on<sp/>retina<sp/>displays.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>glViewport(0,<sp/>0,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/novasurfer/projects/scarecrow2d/src/main.cpp"/>
  </compounddef>
</doxygen>
