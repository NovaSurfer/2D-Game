<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structmath_1_1utils" kind="struct" language="C++" prot="public">
    <compoundname>math::utils</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structmath_1_1utils_1ac138b736f332b03adfac51baaad6027a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool math::utils::cmp</definition>
        <argsstring>(const float x, const float y)</argsstring>
        <name>cmp</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comparing floating point numbers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" line="18" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1utils_1a265204da63fa1192c173c4944ec67363" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float math::utils::absolute</definition>
        <argsstring>(const float x, const float y)</argsstring>
        <name>absolute</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Absolute tolerance test. Fails when the numbers being compared are large. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" line="27" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1utils_1ae8c19c230a03b2a8b8ca6f3604fa4648" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float math::utils::relative</definition>
        <argsstring>(const float x, const float y)</argsstring>
        <name>relative</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Relative tolerance test. Fails when the numbers being compared are small. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" line="36" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1utils_1aea1d3fa9a81bce6626a0bb6d2ef3d982" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>static constexpr float math::utils::rad2deg</definition>
        <argsstring>(const float x)</argsstring>
        <name>rad2deg</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converting radians to degrees </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" line="44" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1utils_1a321e2eedf82d272a8b92e774f9060c0b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>static constexpr float math::utils::deg2rad</definition>
        <argsstring>(const float x)</argsstring>
        <name>deg2rad</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converting degrees to radians </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" line="52" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1utils_1ab7925a5c5edb6a7c6afb60c9a0e13777" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>static constexpr void math::utils::clamp</definition>
        <argsstring>(float number, const float min, const float max)</argsstring>
        <name>clamp</name>
        <param>
          <type>float</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" line="57" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structmath_1_1utils_1aa5fb0b44f2916e472e48b5a0c77e7550" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr const T &amp;</type>
        <definition>static constexpr const T&amp; math::utils::max</definition>
        <argsstring>(const T &amp;a, const T &amp;b)</argsstring>
        <name>max</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" line="63" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" bodystart="63" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" line="14" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/math/utils.h" bodystart="13" bodyend="67"/>
    <listofallmembers>
      <member refid="structmath_1_1utils_1a265204da63fa1192c173c4944ec67363" prot="public" virt="non-virtual"><scope>math::utils</scope><name>absolute</name></member>
      <member refid="structmath_1_1utils_1ab7925a5c5edb6a7c6afb60c9a0e13777" prot="public" virt="non-virtual"><scope>math::utils</scope><name>clamp</name></member>
      <member refid="structmath_1_1utils_1ac138b736f332b03adfac51baaad6027a" prot="public" virt="non-virtual"><scope>math::utils</scope><name>cmp</name></member>
      <member refid="structmath_1_1utils_1a321e2eedf82d272a8b92e774f9060c0b" prot="public" virt="non-virtual"><scope>math::utils</scope><name>deg2rad</name></member>
      <member refid="structmath_1_1utils_1aa5fb0b44f2916e472e48b5a0c77e7550" prot="public" virt="non-virtual"><scope>math::utils</scope><name>max</name></member>
      <member refid="structmath_1_1utils_1aea1d3fa9a81bce6626a0bb6d2ef3d982" prot="public" virt="non-virtual"><scope>math::utils</scope><name>rad2deg</name></member>
      <member refid="structmath_1_1utils_1ae8c19c230a03b2a8b8ca6f3604fa4648" prot="public" virt="non-virtual"><scope>math::utils</scope><name>relative</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
