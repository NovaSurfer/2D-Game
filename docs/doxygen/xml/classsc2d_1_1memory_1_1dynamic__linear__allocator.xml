<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsc2d_1_1memory_1_1dynamic__linear__allocator" kind="class" language="C++" prot="public">
    <compoundname>sc2d::memory::dynamic_linear_allocator</compoundname>
    <basecompoundref refid="classsc2d_1_1memory_1_1allocator" prot="public" virt="non-virtual">sc2d::memory::allocator</basecompoundref>
    <innerclass refid="structsc2d_1_1memory_1_1dynamic__linear__allocator_1_1block__info" prot="public">sc2d::memory::dynamic_linear_allocator::block_info</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a2e7da384fc249911bd884078202388ba" prot="private" static="no" mutable="no">
        <type><ref refid="classsc2d_1_1memory_1_1allocator" kindref="compound">allocator</ref> &amp;</type>
        <definition>allocator&amp; sc2d::memory::dynamic_linear_allocator::backing_allocator</definition>
        <argsstring></argsstring>
        <name>backing_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="32" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1acce4f2e4f6050b95a125c6b30246a45b" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* sc2d::memory::dynamic_linear_allocator::current_pos</definition>
        <argsstring></argsstring>
        <name>current_pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="33" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a20ef2c1dcb06c87ba00aba99c4c5faa4" prot="private" static="no" mutable="no">
        <type><ref refid="structsc2d_1_1memory_1_1dynamic__linear__allocator_1_1block__info" kindref="compound">block_info</ref> *</type>
        <definition>block_info* sc2d::memory::dynamic_linear_allocator::current_block</definition>
        <argsstring></argsstring>
        <name>current_block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="34" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a8dc561a7483276183f6cea484da74bbe" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t sc2d::memory::dynamic_linear_allocator::block_size</definition>
        <argsstring></argsstring>
        <name>block_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="35" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1aff6ed3656bda00c10ad7ad369d5288fc" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t sc2d::memory::dynamic_linear_allocator::block_alignment</definition>
        <argsstring></argsstring>
        <name>block_alignment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="36" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a322098fc32440b93c20d5af08fba5c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sc2d::memory::dynamic_linear_allocator::dynamic_linear_allocator</definition>
        <argsstring>(allocator &amp;backing_allocator, size_t block_size, uint8_t block_alignment)</argsstring>
        <name>dynamic_linear_allocator</name>
        <param>
          <type><ref refid="classsc2d_1_1memory_1_1allocator" kindref="compound">allocator</ref> &amp;</type>
          <declname>backing_allocator</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>block_size</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>block_alignment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="18" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.cpp" bodystart="20" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1adc61b367742498d7f97353870952fd25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sc2d::memory::dynamic_linear_allocator::~dynamic_linear_allocator</definition>
        <argsstring>() override=default</argsstring>
        <name>~dynamic_linear_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1ae73891afb686e35f8a8c4856225801d3" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void *</type>
        <definition>void * sc2d::memory::dynamic_linear_allocator::allocate</definition>
        <argsstring>(size_t size, uint8_t alignement=DEFAULT_ALIGNMENT) final</argsstring>
        <name>allocate</name>
        <reimplements refid="classsc2d_1_1memory_1_1allocator_1afefebdf8439e35d7894829af8d653a51">allocate</reimplements>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alignement</declname>
          <defval>DEFAULT_ALIGNMENT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="22" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.cpp" bodystart="30" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a5c86c1de6759df60dcf5c3fe1a77f047" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void sc2d::memory::dynamic_linear_allocator::deallocate</definition>
        <argsstring>(void *p) final</argsstring>
        <name>deallocate</name>
        <reimplements refid="classsc2d_1_1memory_1_1allocator_1ab29524288541651d4bcacc278dc21deb">deallocate</reimplements>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="23" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1ab692d139c235af03cbb49513e62ec6ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc2d::memory::dynamic_linear_allocator::rewind</definition>
        <argsstring>(void *mark)</argsstring>
        <name>rewind</name>
        <param>
          <type>void *</type>
          <declname>mark</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="24" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.cpp" bodystart="57" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a8194c1e4e1d2d5cbcf4d198d872e9a0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sc2d::memory::dynamic_linear_allocator::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="25" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.cpp" bodystart="99" bodyend="105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsc2d_1_1memory_1_1dynamic__linear__allocator_1abed1420b0af04899683655b255466f92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sc2d::memory::dynamic_linear_allocator::allocate_new_block</definition>
        <argsstring>(size_t size, uint8_t alignment)</argsstring>
        <name>allocate_new_block</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="28" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.cpp" bodystart="107" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="34">
        <label>sc2d::memory::dynamic_linear_allocator</label>
        <link refid="classsc2d_1_1memory_1_1dynamic__linear__allocator"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>sc2d::memory::allocator</label>
        <link refid="classsc2d_1_1memory_1_1allocator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="36">
        <label>sc2d::memory::dynamic_linear_allocator</label>
        <link refid="classsc2d_1_1memory_1_1dynamic__linear__allocator"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>sc2d::memory::allocator</label>
        <link refid="classsc2d_1_1memory_1_1allocator"/>
      </node>
    </collaborationgraph>
    <location file="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" line="16" column="1" bodyfile="/home/novasurfer/projects/scarecrow2d/src/memory/dynamic_linear_allocator.h" bodystart="15" bodyend="37"/>
    <listofallmembers>
      <member refid="classsc2d_1_1memory_1_1allocator_1a21c5a6310f1e8feb470870b664b04753" prot="protected" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>_num_allocations</name></member>
      <member refid="classsc2d_1_1memory_1_1allocator_1a9d5773c2a51447cf4054203a563f95c2" prot="protected" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>_size</name></member>
      <member refid="classsc2d_1_1memory_1_1allocator_1a0688f548cd0ef36fff6585fc25e31f30" prot="protected" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>_start</name></member>
      <member refid="classsc2d_1_1memory_1_1allocator_1a5d2fa4113436f8046742f274aba6abdf" prot="protected" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>_used_memory</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1ae73891afb686e35f8a8c4856225801d3" prot="public" virt="virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>allocate</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1abed1420b0af04899683655b255466f92" prot="private" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>allocate_new_block</name></member>
      <member refid="classsc2d_1_1memory_1_1allocator_1a15fe77378d29ab41a1a44c596166b43a" prot="public" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>allocator</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a2e7da384fc249911bd884078202388ba" prot="private" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>backing_allocator</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1aff6ed3656bda00c10ad7ad369d5288fc" prot="private" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>block_alignment</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a8dc561a7483276183f6cea484da74bbe" prot="private" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>block_size</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a8194c1e4e1d2d5cbcf4d198d872e9a0a" prot="public" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>clear</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a20ef2c1dcb06c87ba00aba99c4c5faa4" prot="private" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>current_block</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1acce4f2e4f6050b95a125c6b30246a45b" prot="private" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>current_pos</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a5c86c1de6759df60dcf5c3fe1a77f047" prot="public" virt="virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>deallocate</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1a322098fc32440b93c20d5af08fba5c53" prot="public" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>dynamic_linear_allocator</name></member>
      <member refid="classsc2d_1_1memory_1_1allocator_1ad519c09ef37afc903fbd83941697fc91" prot="public" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>get_num_allocation</name></member>
      <member refid="classsc2d_1_1memory_1_1allocator_1a8265804fb4e665597c134cc96203e63a" prot="public" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>get_size</name></member>
      <member refid="classsc2d_1_1memory_1_1allocator_1a849ee42faf7430786e18eae6c5d67551" prot="public" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>get_start</name></member>
      <member refid="classsc2d_1_1memory_1_1allocator_1a7bc5801c3b722c2339a1320028d4828d" prot="public" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>get_used_memory</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1ab692d139c235af03cbb49513e62ec6ec" prot="public" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>rewind</name></member>
      <member refid="classsc2d_1_1memory_1_1allocator_1a415be64b44c19c6c08ffc58a20ac2fa2" prot="public" virt="virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>~allocator</name></member>
      <member refid="classsc2d_1_1memory_1_1dynamic__linear__allocator_1adc61b367742498d7f97353870952fd25" prot="public" virt="non-virtual"><scope>sc2d::memory::dynamic_linear_allocator</scope><name>~dynamic_linear_allocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
